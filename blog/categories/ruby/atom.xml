<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类：ruby | BryanFu Blog]]></title>
  <link href="http://helloyokoy.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://helloyokoy.github.io/"/>
  <updated>2015-11-02T16:02:49+08:00</updated>
  <id>http://helloyokoy.github.io/</id>
  <author>
    <name><![CDATA[BryanFu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ruby gems内存泄露]]></title>
    <link href="http://helloyokoy.github.io/blog/ruby-gems-memory-leak/"/>
    <updated>2015-10-22T15:01:34+08:00</updated>
    <id>http://helloyokoy.github.io/blog/ruby-gems-memory-leak</id>
    <content type="html"><![CDATA[<p>请大家检查下 Gemfile.lock，若在使用如下版本的gem包，那么请及时更新</p>

<ul>
  <li>
    <p>therubyracer &lt; 0.12.2</p>
  </li>
  <li>
    <p>sidekiq &lt; 3.5.1</p>
  </li>
  <li>
    <p>celluloid &gt; 0.16.0, &lt; 0.17.2</p>
  </li>
  <li>
    <p>zipruby &lt;= 0.3.6</p>
  </li>
  <li>
    <p>redcarpet &lt; 3.3.3</p>
  </li>
  <li>
    <p>grape &lt; 0.2.5</p>
  </li>
</ul>

<p><a href="https://github.com/ASoftCo/leaky-gems">https://github.com/ASoftCo/leaky-gems</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion简介]]></title>
    <link href="http://helloyokoy.github.io/blog/rubymotion/"/>
    <updated>2015-10-15T15:52:38+08:00</updated>
    <id>http://helloyokoy.github.io/blog/rubymotion</id>
    <content type="html"><![CDATA[<h2 id="rubymotion-">RubyMotion 是什么</h2>
<p><img src="https://ruby-china-files.b0.upaiyun.com/photo/2015/aa191c47356e1b30b1f1a7d7e82fea3c.gif" alt="icon" /></p>

<h2 id="section">统一的运行时环境</h2>
<p>在 iOS 以及 OS X 系统之上，RubyMotion 基于 Objective-C Runtime 和 Foundation 类实现了 Ruby 语言。 在 Andorid 系统之上，RubyMotion 基于 Android Java Runtime，Dalvik 以及 ART 实现了 Ruby 语言。由于这种异常紧密的集成，Ruby 可以自如的调用各平台的接口而不会产生任何性能损失。你可以轻松自如的混编 Ruby 和 Objective-C 或者 Ruby 和 Java，自由的访问各平台提供的最新的 API，自由调用各种第三方库。</p>

<h2 id="section-1">完全编译</h2>

<p>RubyMotion 使用基于 LLVM 构建(参见原理)的革命性的、先进的预编译器（AOT Complier）将项目中的 Ruby 代码编译成经过优化的机器代码。在 iOS 以及 Android 项目，编译器可以生成 32 位和 64 位的 ARM 目标代码，在 OS X 项目则可以生成 32 位和 64 位的 Intel 目标代码。原始的 Ruby 代码不会出现在程序中，也不会在运行期间被解释执行。RubyMotion 的典型项目的程序包大小在 1MB 以下。</p>

<h2 id="section-2">自动管理内存</h2>

<p>在 Ruby 语言中，你无需考虑内存管理事宜。因为，RubyMotion 会自动释放内存中那些你创建的但是却不再会被使用的对象。针对 iOS 和 OS X 平台，我们提供了一个自定义的内存模型，在设计上类似 Objective-C 的 ARC 机制。这个模型无需再使用额外内存或者代码来处理不再使用的对象的声明和回收。针对 Android 平台，我们使用 Java 运行时环境的 GC 来管理内存。</p>

<!--more-->

<h2 id="section-3">支持并行</h2>

<p>绝大斗数 Android 设备以及最新的 iOS 和 OS X 硬件都支持多核处理器。所以在设计应用程序时，考虑到支持并发是非常重要的。RubyMotion 被设计成没有全局锁且是可重入的（re-entrant），主要目的就是可以让代码并行的执行。针对 iOS 和 OS X 平台，RubyMotion 为 Grand Central Dispatch 提供了方便的接口，你可以自如的使用 CPU 核心来平衡需要大量计算的任务。</p>

<h2 id="rubymotion">要不要选择 RubyMotion</h2>

<p>如果你喜欢 Ruby，当然你需要来尝试 RubyMotion，并且你会爱上他。并且，选择 RubyMotion 意味着你可以像开发 Rails 应用一样使用 Rake 工具链，同时又不会放弃 AutoLayout 等原生开发时必须的技术。你可以使用来自人类希望的 JetBrains 出品的 RubyMine，也可以使用 SublimeText 或者 VIM(Emacs)。你会看到类似 Rails 的文件组织结构。作为一个 Rails 开发者，你会感到所有的开发环境都是如此的令人感到熟悉。一个人，凭借 Ruby 实现真正意义上的全端全栈，似乎指日可待啊～</p>

<h2 id="section-4">社区发展</h2>

<p>RubyMotion 存在已经第四个年头，所以目前是一个稳定的项目。由于之前没有提供免费试用版，所以造成好多人想去学习，却因为感觉到相对昂贵的价格而止步不前。现在不用了，快去 <a href="http://www.rubymotion.com/download/">http://www.rubymotion.com/download/</a> 下载免费版把玩吧……</p>

<p>在社区发展方面，社区贡献了非常多的 Gems。得益于 Ruby 强大的 DSL 生成能力和元编程特性，非常多的 Gems 对原生开发冗余的编程模型和繁杂的 API 调用做了非常好的封装。<a href="http://motion-toolbox.com/">http://motion-toolbox.com/</a> 里面收录了绝大多数优质的 RubyMotion 的 Gems。</p>

<h2 id="section-5">相关资料</h2>

<p><a href="https://ruby-china.org/topics/22416">RubyMotion Workshop Beijing 资料总结</a>
<a href="http://www.rubymotion.com/download/">RubyMotion 官网</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails gems 推荐]]></title>
    <link href="http://helloyokoy.github.io/blog/rails-gems-recomend/"/>
    <updated>2015-10-05T12:31:27+08:00</updated>
    <id>http://helloyokoy.github.io/blog/rails-gems-recomend</id>
    <content type="html"><![CDATA[<p>Rails社区的gem库，按我感觉质量普遍比较高，这跟Rails社区的氛围有关，以下推荐的是我个人在项目中时常用到的并且比较主流的gem，想到哪儿写到哪儿，挂一漏万。</p>

<h5 id="bootstrapbootstrap-sass">1.bootstrap（bootstrap-sass）</h5>

<p>这个不用解释了吧，对于没有专业前端小伙伴的项目和团队是福音。而且对于想要学习前端技术的同学，bootstrap的源码非常值得进行深入的学习和理解。当然，缺点也是有的，就是大家的网站做出来都比较像，建议有条件的小伙伴使用的时候还是多进行一些个性化修改。</p>

<h5 id="capistranocapistrano--rubygemsorg">2.Capistrano（capistrano | RubyGems.org）</h5>

<p>Capistrano最初就是用来向服务器部署ruby应用的，当然现在也开始支持其他类型项目的部署。Capistrano是一种在多台服务器上运行脚本的开源工具，它主要用于部署web应用。它自动完成多台服务器上新版本的同步更新，包括数据库的改变。使用起来非常方便，基本也是Rails应用开发必备。</p>

<h5 id="bcryptbcrypt--rubygemsorg">3.bcrypt（bcrypt | RubyGems.org）</h5>

<p>bcrypt是一个跨平台的文件加密工具。由它加密的文件可在所有支持的操作系统和处理器上进行转移。它的口令必须是8至56个字符，并将在内部被转化为448位的密钥。在rails上使用起来相当简便，web开发一般是少不了的。</p>

<h5 id="sprocketssprockets--rubygemsorg">4.sprockets（sprockets | RubyGems.org）</h5>

<p>Sprockets 是一个 Ruby 库，用来检查 JavaScript 文件的相互依赖关系，用以优化网页中引入的js文件，以避免加载不必要的js文件，加快网页访问速度。这个现在貌似是rails工程默认自带gem，记不太清了，足见重要性。但是我在使用中发现有时候会跟bootstrap的js库发生冲突，主要是版本问题，有使用的小伙伴需要注意一下。</p>

<!--more-->

<h5 id="paperclippaperclip--rubygemsorg">5.Paperclip（paperclip | RubyGems.org）</h5>

<p>paperclip基本上已经是rails的御用图片上传gem了，功能强大使用方便，但是唯一不太好的就是图片剪裁上面功能比较有限。paperclip依赖于ImageMagic，大部分linux包管理器（如apt yum portage等）中应该都能找到这个软件包。</p>

<h5 id="rmagickrmagick--rubygemsorg">6.rmagick（rmagick | RubyGems.org）</h5>

<p>这个gem弥补了paperclip在图片剪裁上的不足。功能十分十分十分的强大，文档也很齐全，只不过是全英文，中文资料比较少。如果项目有要开发头像剪裁上传，那么用rmagic剪裁，paperclip上传是比较好的解决方案。</p>

<h5 id="friendlyidfriendlyid--rubygemsorg">7.friendly_id（friendly_id | RubyGems.org）</h5>

<p>现在大部分网站都已经是友好的url地址了，如果你的rails项目还用数字作为id进行查询那就太low了。</p>

<h5 id="willpaginatewillpaginate">8.will_paginate（will_paginate）</h5>

<p>老版本的will_paginate分业是基于plugin方式的，新版本的will_paginate已经抛弃了这样的做法，转而使用gem的方式。这样一来安装和使用更加方便，配合一些前端的分页加载库，会让分页加载功能开发非常快捷。</p>

<h5 id="ransackransack--rubygemsorg">9.ransack（ransack | RubyGems.org）</h5>

<p>搜索功能一般分为分词和不分词的，如果你只想做用户和文章标题检索之类的功能，那么不分词的搜索gem比较合适，类似的gem挺多的，我常用的是这个。</p>

<h5 id="sunspotsunspot--rubygemsorg">10.sunspot（sunspot | RubyGems.org）</h5>

<p>接上面，全文搜索的gem也不少，sunspot对于小型项目的话，稍微有些重。如果没有那么多要求的话，sphinx也可以考虑，速度快，占用资源低。</p>

<h5 id="gecodergeocoder--rubygemsorg">11.Gecoder（geocoder | RubyGems.org）</h5>

<p>说实话在web上做定位确实比较乏力，尽量还是用手机客户端吧</p>

<h5 id="pumapumapuma--github">12.puma（puma/puma · GitHub）</h5>

<p>对于想要处理并发请求的web项目，Puma 是和 Unicorn相竞争的 Web 服务器，它能够处理并发请求。Puma 使用线程，以及工作者进程，能够更多的利用可用的 CPU。在 Puma 中，如果整个基础代码是线程安全的，那么你可用利用线程。否则，在使用 Puma 的时候，你只能使用工作者进程进行拓展。Puma的设置也比较简单，官方有详细的使用文档，RubyChina也使用Puma，个人推荐。</p>

<h5 id="emojiwpetersonemoji--github">13.Emoji（wpeterson/emoji · GitHub）</h5>

<p>现在只要涉及社交的项目估计很少有不用表情的了，Emoji是个集成度比较高的Emoji表情转码库，使用方便，当然大部分情况下还是要配合前端使用。</p>

<p>暂时想到这么多，欢迎补充，待续。。。。</p>

<hr />
<p>著作权归作者所有。</p>

<p>商业转载请联系作者获得授权，非商业转载请注明出处。</p>

<p>作者：孙笛</p>

<p>链接：http://www.zhihu.com/question/31083216/answer/50654456</p>

<p>来源：知乎</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby on rails 快速学习]]></title>
    <link href="http://helloyokoy.github.io/blog/ruby-fast-learn/"/>
    <updated>2015-09-02T12:07:16+08:00</updated>
    <id>http://helloyokoy.github.io/blog/ruby-fast-learn</id>
    <content type="html"><![CDATA[<p>快速学习Ruby on Rails，这应该是个伪命题，没有什么事情是能够快速学习的，尤其是编程，而且是Rails这样极其复杂的框架，它由无数顶级高手成年累月的心血堆砌而成，融合了web开发领域内几乎全部的最佳实践。</p>

<p>如果想快速入门，那么其他一些人提过的 Rails Tutorial，或者 Rails for Zombies 都是很好的选择，但相信我，即便你能快速做出简单的网站，依旧会对整个开发环境和知识体系一头雾水，在面临现实世界的需求时往往会捉襟见肘，花费更多的时间来补充缺失的知识。</p>

<p>所以，我认为如果你的目的不是创业，而是学习的话，全面有效成体系地吸收知识是更好的选择，这方面，读书是最好的方式，不过市场上滥竽充数的书籍实在很多，对于新手来说，怎样用有限的时间读最合适的书，是很重要的。</p>

<p>我在学习和使用Ruby与Rails的过程中，读过大部分在Amazon排名靠前的相关书籍，当然有些不错的书，随着技术的进化，已经略显陈旧。以下给出的阅读列表，是在现在依然有效的选择：</p>

<!--more-->

<h4 id="section">起点阶段</h4>

<p>强烈建议至少具备如下知识后再开始Rails开发</p>

<h4 id="html-and-css">Html and CSS</h4>

<p>结构和样式不止是设计人员的事，web开发必须要熟悉Head First HTML与CSS（第2版）虽然已经出版了很久，但依然是最好的Html&amp;CSS入门书</p>

<h4 id="linux">Linux</h4>

<p>几乎所有的开发环境都严重依赖于GNU/Linux为主的命令行环境，因此需要学习linux的基本概念和操作</p>

<p>The Linux Command Line</p>

<p>目前最好的linux command line学习指南，生动，清晰，详细，无论是菜鸟还是多年的老手都能从中受益，远超过之前作为标准教材的practical guide to xx系列。No starch这个出版社既有延续至今的Hacker精神，也懂得如何发掘有趣的作者</p>

<h4 id="http-and-rest">HTTP and Rest</h4>

<p>Web开发对于Http的深入理解是必须的，另外Rails还使用Rest协议作为基本指导原则，所以需要深入理解Http和RestRESTful Web Services中文版 这本是目前为止最好的描述HTTP与Rest的作品，可以让你重新认识Web，更何况其中的示例是Ruby语言(因为这本书合著者是Sam Ruby)</p>

<h4 id="programming">Programming</h4>

<p>程序员修炼之道 这本书告诉你，如何做才能成为一个注重实效的程序员，涉及了非常多的理念和实践，虽然都不深入，但至少让你知道世界是什么样子的，是任何程序员最应该在新手阶段读的书，也是对整个业界影响最大的经典之一</p>

<h4 id="git-and-version-control">Git and Version Control</h4>

<p>版本控制在项目中是一开始就要使用的，不止是开发，一切事情都需要版本控制Pro Git 这本是迄今为止讲解Git最清楚最深入的书，对于新手，不建议看后面的实现原理，先读前几章了解概念和学习日常实践使用是最重要的</p>

<h4 id="ruby">Ruby</h4>

<p>如果只是在Rails中使用的Ruby，可以使用一些免费的快速入门教程，不过，系统地学习Ruby，可以了解到很多面向对象开发或函数式编程的思想，对于熟悉和掌握Rails帮助非常大Programming Ruby 1.9 公认的Ruby入门经典，不过对于新手来说，只推荐前半的入门部分，高阶内容可以稍后再来学习</p>

<h4 id="rails">Rails</h4>

<p>Learn Web Development with the Ruby on Rails Tutorial</p>

<p>最后是Rails自身的学习，这本书的最新版涵盖Rails4，是目前为止最好最完整的Rails入门教程，可以在线看，还有大量的视频搭配</p>

<h4 id="section-1">进阶阶段</h4>
<p>具备下面的知识，可以让你或多或少地理解Rails Way，并真正开始写出合格的Rails应用</p>

<h4 id="programming-1">Programming</h4>

<p>重构</p>

<p>这本”重构”是当年石破天惊的经典著作，讲解如何持续改进和让代码优雅干净，拥有直到现在还依然适用的价值，尤其为Ruby On Rails社区广泛接受，这本书有将其中的Java语言换成Ruby后的版本(重构(Ruby版) (豆瓣))</p>

<p>UNIX编程艺术</p>

<p>由公认的黑客领袖之一Eric S.Raymond撰写的这本书总结了长久以来的Unix领域中的设计和开发哲学，思想乃至文化体系，是了解Ruby和Rails诞生于其中的Unix黑客文化必不可少的读物</p>

<h4 id="ruby-1">Ruby</h4>

<p>深入理解Ruby，除了上边提到的Programming Ruby 1.9以及重构等通用编程书之外，还有以下几个选择</p>

<p>Ruby编程语言</p>

<p>Ruby之父松本行弘和O’Reilly的王牌作者合作，诞生了这本讲解Ruby最透彻的经典著作</p>

<p>Eloquent Ruby</p>

<p>Ruby社区的编程指南之一，介绍了Ruby社群的文化，品味和编程原则，强烈地反映了Ruby程序员的共同特质: 幽默，健谈，追求乐趣，热爱生活</p>

<h4 id="test">Test</h4>

<p>测试驱动开发(TDD)以及之后进化的行为驱动开发(BDD)是Ruby和Rails社群的核心文化之一，只有彻底理解并运用BDD，才是合格的Rails开发者</p>

<p>The RSpec Book</p>

<p>唯一的也是必读的BDD介绍作品，由RSpec核心成员撰写</p>

<p>Git</p>

<p>可以坚持把Pro Git的后半部分学习完，没有更深入和清楚的书了</p>

<p>CSS</p>

<p>CSS权威指南</p>

<p>Eric Meyer的CSS权威指南至今仍然是CSS2讲解最全面和最深入的参考书</p>

<p>Javascript and jQuery</p>

<p>Web开发的交互性会越来越多，Javascript已经成为了相当严肃的编程语言</p>

<p>JavaScript权威指南</p>

<p>目前最全面最好的Javascript学习书籍</p>

<p>jQuery基础教程 （第4版）</p>

<p>唯一尚可称得上紧跟jQuery发展脚步的学习指南</p>

<h4 id="rails-1">Rails</h4>

<p>Rails发展的实在太快了，最好的方法也许是跟踪在线文档，不过还是推荐这本</p>

<p>The Rails 4 Way</p>

<p>这本书的Rails 3版本讲解Rails的哲学和细节相当到位，不过Rails 4版本还没有出版，非常值得在今年3月份第一时间拿下它。</p>

<p>— More</p>

<p>上边的书籍都读过的话，可能你终于能了解到Rails背后涉及的概念和实践有多么庞大惊人，也了解到了还有多么深的知识鸿沟需要跨越，了解到了一切都还只是开始，不过值得庆幸的是，一切事情都需要个开始</p>

<hr />
<p>著作权归作者所有。</p>

<p>商业转载请联系作者获得授权，非商业转载请注明出处。</p>

<p>作者：李路</p>

<p>链接：http://www.zhihu.com/question/19552402/answer/22336708</p>

<p>来源：知乎</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby招聘]]></title>
    <link href="http://helloyokoy.github.io/blog/rubyzhao-pin/"/>
    <updated>2015-07-09T16:24:29+08:00</updated>
    <id>http://helloyokoy.github.io/blog/rubyzhao-pin</id>
    <content type="html"><![CDATA[<p><img src="https://ruby-china-files.b0.upaiyun.com/photo/2014/a490df4656f969d72b2f560c411d9b64.jpg" alt="alt text" title="logo" /></p>

<p><img src="https://ruby-china-files.b0.upaiyun.com/photo/2014/f5046f117c0bc0081ee8b7431f150cea.jpg" alt="alt text" title="Title" /></p>

<!--more-->

<p><img src="https://ruby-china-files.b0.upaiyun.com/photo/2014/9d7da2a7d66050e201486c8168f269a5.jpg" alt="alt text" title="Title" /></p>

<p><img src="https://ruby-china-files.b0.upaiyun.com/photo/2014/ac3ec0fc602bff211e45a87e87d02a13.jpg" alt="alt text" title="Title" /></p>

<p><img src="https://ruby-china-files.b0.upaiyun.com/photo/2014/68f11d523efd63d722aa71cd109e3308.jpg" alt="alt text" title="Title" /></p>

<p><img src="https://ruby-china-files.b0.upaiyun.com/photo/2014/cf83aeab19c568f2448e80ba517d4891.jpg" alt="alt text" title="Title" /></p>

<p><img src="https://ruby-china-files.b0.upaiyun.com/photo/2014/30831a38a59aaabd2618494454670792.jpg" alt="alt text" title="Title" /></p>

<p>有意者请发送简历至： <a href="&#109;&#097;&#105;&#108;&#116;&#111;:&#109;&#105;&#110;&#046;&#103;&#111;&#110;&#103;&#064;&#100;&#106;&#105;&#046;&#099;&#111;&#109;">&#109;&#105;&#110;&#046;&#103;&#111;&#110;&#103;&#064;&#100;&#106;&#105;&#046;&#099;&#111;&#109;</a></p>
]]></content>
  </entry>
  
</feed>
